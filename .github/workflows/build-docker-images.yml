name: Build Docker images

on:
  workflow_dispatch:
  push:

env:
  AWS_REGION: eu-west-1

jobs:
  build-fileserver:
    name: Build image - fileserver
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: datalix-fileserver
          IMAGE_TAG: ${{ github.sha }}
        run: |
          env
          docker build -t ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG} -f infrastructure/images/fileserver/Dockerfile .
          docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
          echo "::set-output name=image::${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"

  deploy-fileserver-stg:
    uses: bedri-allkja/entalgo-fileserver/.github/workflows/deploy-to-eks.yml@pipeline
    needs: [build-fileserver]
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    with:
      eks_cluster_name: datalix-shared
      helm_command: helm upgrade --wait --install datalix-stage-fileserver -n datalix-stage -f infrastructure/k8s/fileserver/values-stage.yaml --set image.tag=${{ github.sha }} infrastructure/k8s/fileserver

  deploy-fileserver-prod:
    uses: bedri-allkja/entalgo-fileserver/.github/workflows/deploy-to-eks.yml@pipeline
    needs: [build-fileserver]
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    with:
      eks_cluster_name: datalix-shared
      helm_command: helm upgrade --wait --install datalix-prod-fileserver -n datalix-prod -f infrastructure/k8s/fileserver/values-prod.yaml --set image.tag=${{ github.sha }} infrastructure/k8s/fileserver
